<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://KS-superbig.github.io</id>
    <title>XYK的博客</title>
    <subtitle></subtitle>
    <icon>https://ks-superbig.github.io/images/favicon.ico</icon>
    <link href="https://KS-superbig.github.io" />
    <author>
      <name>XYK</name>
    </author>
    <updated>2025-08-02T11:39:29.698Z</updated>
    <entry>
        <id>https://ks-superbig.github.io/2025/08/02/CSAPP/</id>
        <title>CSAPP</title>
        <link rel="alternate" href="https://ks-superbig.github.io/2025/08/02/CSAPP/"/>
        <content type="html">&lt;h1 id=&#34;csapp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csapp&#34;&gt;#&lt;/a&gt; CSAPP&lt;/h1&gt;
&lt;h2 id=&#34;labs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#labs&#34;&gt;#&lt;/a&gt; labs&lt;/h2&gt;
&lt;h3 id=&#34;bomb&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bomb&#34;&gt;#&lt;/a&gt; bomb&lt;/h3&gt;
&lt;p&gt;phase_1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;00000000000012db &amp;lt;phase_1&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    12db:       48 83 ec 08             sub    $0x8,%rsp      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    12df:       48 8d 35 7a 18 00 00    lea    0x187a(%rip),%rsi        # 2b60 &amp;lt;_IO_stdin_used+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    12e6:       e8 62 05 00 00          callq  184d &amp;lt;strings_not_equal&amp;gt;//上面的rsi是第二个参数，rdi是第一个参                                                                          数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    12eb:       85 c0                   test   %eax,%eax   //返回值如果是1那么ZF为0那么test结果为假，则爆炸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    12ed:       74 05                   je     12f4 &amp;lt;phase_1+0x19&amp;gt;  //只有返回值0即两个部分相等才可以跳转&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    12ef:       e8 58 08 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    12f4:       48 83 c4 08             add    $0x8,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    12f8:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;phase_2：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;00000000000012f9 &amp;lt;phase_2&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    12f9:       55                      push   %rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    12fa:       53                      push   %rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    12fb:       48 83 ec 28             sub    $0x28,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    12ff:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1306:       00 00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1308:       48 89 44 24 18          mov    %rax,0x18(%rsp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    130d:       31 c0                   xor    %eax,%eax   //一个清零操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    130f:       48 89 e6                mov    %rsp,%rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1312:       e8 71 08 00 00          callq  1b88 &amp;lt;read_six_numbers&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1317:       83 3c 24 00             cmpl   $0x0,(%rsp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    131b:       79 05                   jns    1322 &amp;lt;phase_2+0x29&amp;gt;  //cmpl，jns这个组合的作用是检查是否为非负                                                                       数，&amp;gt;=0则跳转1322处mov否则爆炸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    131d:       e8 2a 08 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1322:       48 89 e5                mov    %rsp,%rbp     //rbp中存储当前rsp中的数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1325:       bb 01 00 00 00          mov    $0x1,%ebx   //ebx中设置为1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  * 132a:       89 d8                   mov    %ebx,%eax   //令eax=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    132c:       03 45 00                add    0x0(%rbp),%eax   //eax+=rbp中的值也就是现在rsp所指的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    132f:       39 45 04                cmp    %eax,0x4(%rbp)   //比较eax和rbp地址增加四个字节后所对应的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                                                  相等则跳转否则爆炸，这里的意思rbp加四个字节后                                                                   得到的值应该等于原先+eax 	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1332:       74 05                   je     1339 &amp;lt;phase_2+0x40&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1334:       e8 13 08 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1339:       83 c3 01                add    $0x1,%ebx   //ebx=2现在&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    133c:       48 83 c5 04             add    $0x4,%rbp   //rbp向上移动四个字节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  * 1340:       83 fb 06                cmp    $0x6,%ebx   //比较ebx和6不相等时跳转，到132a，从这里我们可以看出                                                              这是个循环&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1343:       75 e5                   jne    132a &amp;lt;phase_2+0x31&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1345:       48 8b 44 24 18          mov    0x18(%rsp),%rax  //接下来这部分就是金丝雀的判断栈是否溢出部分&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    134a:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1351:       00 00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1353:       74 05                   je     135a &amp;lt;phase_2+0x61&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1355:       e8 a6 fb ff ff          callq  f00 &amp;lt;__stack_chk_fail@plt&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    135a:       48 83 c4 28             add    $0x28,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    135e:       5b                      pop    %rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;**表示循环内部&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;phase_3：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; 0000000000001361 &amp;lt;phase_3&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1361:       48 83 ec 28             sub    $0x28,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1365:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax  //设置金丝雀&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 136c:       00 00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 136e:       48 89 44 24 18          mov    %rax,0x18(%rsp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1373:       31 c0                   xor    %eax,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1375:       48 8d 4c 24 0f          lea    0xf(%rsp),%rcx  //一个字节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 137a:       48 8d 54 24 10          lea    0x10(%rsp),%rdx  //4个字节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 137f:       4c 8d 44 24 14          lea    0x14(%rsp),%r8   //四个字节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1384:       48 8d 35 4b 18 00 00    lea    0x184b(%rip),%rsi        # 2bd6 &amp;lt;_IO_stdin_used+0x1c6&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 138b:       e8 10 fc ff ff          callq  fa0 &amp;lt;__isoc99_sscanf@plt&amp;gt;   //这几个lea不太好理解&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1390:       83 f8 02                cmp    $0x2,%eax   //函数的返回值和2比较如果eax-2&amp;gt;0时跳转，否则爆炸也就                                                              是说我们要输入&amp;gt;=2个数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1393:       7f 05                   jg     139a &amp;lt;phase_3+0x39&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1395:       e8 b2 07 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 139a:       83 7c 24 10 07          cmpl   $0x7,0x10(%rsp)   //也就是rdx中存储的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 139f:       0f 87 02 01 00 00       ja     14a7 &amp;lt;phase_3+0x146&amp;gt; //如果大于7则跳转到那个地址处对应下面*号爆                                                                       炸，所以rdx中的值要&amp;lt;=7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13a5:       8b 54 24 10             mov    0x10(%rsp),%edx       //rdx中的值赋值到edx中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13a9:       48 8d 05 40 18 00 00    lea    0x1840(%rip),%rax        # 2bf0 &amp;lt;_IO_stdin_used+0x1e0&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13b0:       48 63 14 90             movslq (%rax,%rdx,4),%rdx   //rdx中的值经过寻址然后覆盖掉，并进行扩充&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13b4:       48 01 d0                add    %rdx,%rax     //rax=rax初始+rdx中的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13b7:       ff e0                   jmpq   *%rax   //将rax中的值当作地址跳转到这里，这里我们可以看出来是一个跳                                                          转表格式，下面也可以看到case有7个所以就是对应上面rdx&amp;lt;=7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13b9:       b8 63 00 00 00          mov    $0x63,%eax  //赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13be:       81 7c 24 14 dd 03 00    cmpl   $0x3dd,0x14(%rsp)  //比较r8中的值和989，所以r8中为989&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13c5:       00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13c6:       0f 84 e5 00 00 00       je     14b1 &amp;lt;phase_3+0x150&amp;gt;   //如果相等跳转不等就爆炸，所以我们可以有                                                                         一组答案就是0  989&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13cc:       e8 7b 07 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13e7:       00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13e8:       0f 84 c3 00 00 00       je     14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13ee:       e8 59 07 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13f3:       b8 63 00 00 00          mov    $0x63,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13f8:       e9 b4 00 00 00          jmpq   14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 13fd:       b8 6a 00 00 00          mov    $0x6a,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1402:       81 7c 24 14 3c 03 00    cmpl   $0x33c,0x14(%rsp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1409:       00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 140a:       0f 84 a1 00 00 00       je     14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1410:       e8 37 07 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1415:       b8 6a 00 00 00          mov    $0x6a,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 141a:       e9 92 00 00 00          jmpq   14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 141f:       b8 6a 00 00 00          mov    $0x6a,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1424:       83 7c 24 14 69          cmpl   $0x69,0x14(%rsp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1429:       0f 84 82 00 00 00       je     14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 142f:       e8 18 07 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1434:       b8 6a 00 00 00          mov    $0x6a,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1439:       eb 76                   jmp    14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 143b:       b8 69 00 00 00          mov    $0x69,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1440:       81 7c 24 14 6f 02 00    cmpl   $0x26f,0x14(%rsp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1447:       00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1448:       74 67                   je     14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 144a:       e8 fd 06 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 144f:       b8 69 00 00 00          mov    $0x69,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1454:       eb 5b                   jmp    14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1456:       b8 6e 00 00 00          mov    $0x6e,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 145b:       81 7c 24 14 b6 03 00    cmpl   $0x3b6,0x14(%rsp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1462:       00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1463:       74 4c                   je     14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1465:       e8 e2 06 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 146a:       b8 6e 00 00 00          mov    $0x6e,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 146f:       eb 40                   jmp    14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1471:       b8 64 00 00 00          mov    $0x64,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1476:       81 7c 24 14 b3 03 00    cmpl   $0x3b3,0x14(%rsp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 147d:       00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 147e:       74 31                   je     14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1480:       e8 c7 06 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1485:       b8 64 00 00 00          mov    $0x64,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 148a:       eb 25                   jmp    14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 148c:       b8 6b 00 00 00          mov    $0x6b,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1491:       81 7c 24 14 da 03 00    cmpl   $0x3da,0x14(%rsp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1498:       00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1499:       74 16                   je     14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 149b:       e8 ac 06 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 14a0:       b8 6b 00 00 00          mov    $0x6b,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 14a5:       eb 0a                   jmp    14b1 &amp;lt;phase_3+0x150&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*14a7:       e8 a0 06 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 14ac:       b8 78 00 00 00          mov    $0x78,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*14b1:       3a 44 24 0f             cmp    0xf(%rsp),%al    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 14b5:       74 05                   je     14bc &amp;lt;phase_3+0x15b&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 14b7:       e8 90 06 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 14bc:       48 8b 44 24 18          mov    0x18(%rsp),%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 14c1:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 14c8:       00 00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 14ca:       74 05                   je     14d1 &amp;lt;phase_3+0x170&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 14cc:       e8 2f fa ff ff          callq  f00 &amp;lt;__stack_chk_fail@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 14d1:       48 83 c4 28             add    $0x28,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 14d5:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;phase_4&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0000000000001514 &amp;lt;phase_4&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1514:       48 83 ec 18             sub    $0x18,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1518:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    151f:       00 00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1521:       48 89 44 24 08          mov    %rax,0x8(%rsp)   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1526:       31 c0                   xor    %eax,%eax    //经典操作设置金丝雀，并且置0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1528:       48 8d 4c 24 04          lea    0x4(%rsp),%rcx    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    152d:       48 89 e2                mov    %rsp,%rdx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1530:       48 8d 35 36 19 00 00    lea    0x1936(%rip),%rsi        # 2e6d &amp;lt;array.3462+0x25d&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1537:       e8 64 fa ff ff          callq  fa0 &amp;lt;__isoc99_sscanf@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    153c:       83 f8 02                cmp    $0x2,%eax &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    153f:       75 06                   jne    1547 &amp;lt;phase_4+0x33&amp;gt; //不相等跳转爆炸，所以eax为2，那么就是2个数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1541:       83 3c 24 0e             cmpl   $0xe,(%rsp)//rsp中的值-14&amp;lt;=0那么跳转，这里需要跳转因为要不会爆炸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1545:       76 05                   jbe    154c &amp;lt;phase_4+0x38&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   *1547:       e8 00 06 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   *154c:       ba 0e 00 00 00          mov    $0xe,%edx  //edx=14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1551:       be 00 00 00 00          mov    $0x0,%esi  //esi=0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1556:       8b 3c 24                mov    (%rsp),%edi  //edi=（rsp）此处的值并且进行func的参数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1559:       e8 78 ff ff ff          callq  14d6 &amp;lt;func4&amp;gt;   //这里还需要看一下func4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    155e:       85 c0                   test   %eax,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1560:       75 07                   jne    1569 &amp;lt;phase_4+0x55&amp;gt;  //所以函数的返回值必须是0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1562:       83 7c 24 04 00          cmpl   $0x0,0x4(%rsp)  //rcx中的值必须是0，否则爆炸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1567:       74 05                   je     156e &amp;lt;phase_4+0x5a&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  * 1569:       e8 de 05 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    156e:       48 8b 44 24 08          mov    0x8(%rsp),%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1573:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    157a:       00 00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    157c:       74 05                   je     1583 &amp;lt;phase_4+0x6f&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    157e:       e8 7d f9 ff ff          callq  f00 &amp;lt;__stack_chk_fail@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1583:       48 83 c4 18             add    $0x18,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1587:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;00000000000014d6 &amp;lt;func4&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14d6:       48 83 ec 08             sub    $0x8,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14da:       89 d0                   mov    %edx,%eax  //eax=edx=14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14dc:       29 f0                   sub    %esi,%eax  //eax-=esi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14de:       89 c1                   mov    %eax,%ecx  //ecx=eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14e0:       c1 e9 1f                shr    $0x1f,%ecx  //逻辑右移ecx31，也就是只剩下符号位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14e3:       01 c8                   add    %ecx,%eax   //eax+=ecx原来的符号位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14e5:       d1 f8                   sar    %eax  //eax算术右移一位，这里其实就是找中间值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14e7:       8d 0c 30                lea    (%rax,%rsi,1),%ecx  //ecx存储rax+rsi所代表的地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14ea:       39 f9                   cmp    %edi,%ecx  //ecx-edi&amp;lt;=0跳转，中间值小于等于目标值就跳转&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14ec:       7e 0c                   jle    14fa &amp;lt;func4+0x24&amp;gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14ee:       8d 51 ff                lea    -0x1(%rcx),%edx  //否则rcx-1所指的地址存在edx中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14f1:       e8 e0 ff ff ff          callq  14d6 &amp;lt;func4&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14f6:       01 c0                   add    %eax,%eax   //eax*=2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14f8:       eb 15                   jmp    150f &amp;lt;func4+0x39&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   *14fa:       b8 00 00 00 00          mov    $0x0,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    14ff:       39 f9                   cmp    %edi,%ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1501:       7d 0c                   jge    150f &amp;lt;func4+0x39&amp;gt;    //大于等于mid就跳转尾部返回&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1503:       8d 71 01                lea    0x1(%rcx),%esi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1506:       e8 cb ff ff ff          callq  14d6 &amp;lt;func4&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    150b:       8d 44 00 01             lea    0x1(%rax,%rax,1),%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   *150f:       48 83 c4 08             add    $0x8,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1513:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;phase_5&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0000000000001588 &amp;lt;phase_5&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1588:       53                      push   %rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1589:       48 83 ec 10             sub    $0x10,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    158d:       48 89 fb                mov    %rdi,%rbx   //rdi中的值存入rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1590:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1597:       00 00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1599:       48 89 44 24 08          mov    %rax,0x8(%rsp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    159e:       31 c0                   xor    %eax,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15a0:       e8 8a 02 00 00          callq  182f &amp;lt;string_length&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15a5:       83 f8 06                cmp    $0x6,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15a8:       74 05                   je     15af &amp;lt;phase_5+0x27&amp;gt; //必须跳转否则爆炸，也就是返回字符串长度为6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15aa:       e8 9d 05 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   *15af:       b8 00 00 00 00          mov    $0x0,%eax    //eax赋值为0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+2c 15b4:       0f b6 14 03             movzbl (%rbx,%rax,1),%edx   //从地址rbx+rax中取低八位数字存到edx中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15b8:       83 e2 0f                and    $0xf,%edx  //低四位和1进行与运算高位全部置为0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15bb:       48 8d 0d 4e 16 00 00    lea    0x164e(%rip),%rcx        # 2c10 &amp;lt;array.3462&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15c2:       0f b6 14 11             movzbl (%rcx,%rdx,1),%edx  //从一个地址读取一个字节存入edx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15c6:       88 54 04 01             mov    %dl,0x1(%rsp,%rax,1)  //将上一步操作的低八位放在后面所指向的地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15ca:       48 83 c0 01             add    $0x1,%rax  //rax++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15ce:       48 83 f8 06             cmp    $0x6,%rax  //rax和6比较&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15d2:       75 e0                   jne    15b4 &amp;lt;phase_5+0x2c&amp;gt;  //经历六轮循环&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15d4:       c6 44 24 07 00          movb   $0x0,0x7(%rsp)  //&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15d9:       48 8d 7c 24 01          lea    0x1(%rsp),%rdi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15de:       48 8d 35 fa 15 00 00    lea    0x15fa(%rip),%rsi        # 2bdf &amp;lt;_IO_stdin_used+0x1cf&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15e5:       e8 63 02 00 00          callq  184d &amp;lt;strings_not_equal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15ea:       85 c0                   test   %eax,%eax    //返回值不为0那么就爆炸，也就是两个字符串需要相等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15ec:       74 05                   je     15f3 &amp;lt;phase_5+0x6b&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15ee:       e8 59 05 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+6b 15f3:       48 8b 44 24 08          mov    0x8(%rsp),%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15f8:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    15ff:       00 00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1601:       74 05                   je     1608 &amp;lt;phase_5+0x80&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1603:       e8 f8 f8 ff ff          callq  f00 &amp;lt;__stack_chk_fail@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1608:       48 83 c4 10             add    $0x10,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    160c:       5b                      pop    %rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    160d:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;000000000000182f &amp;lt;string_length&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    182f:       80 3f 00                cmpb   $0x0,(%rdi)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1832:       74 13                   je     1847 &amp;lt;string_length+0x18&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1834:       b8 00 00 00 00          mov    $0x0,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   *1839:       48 83 c7 01             add    $0x1,%rdi  //rdi++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    183d:       83 c0 01                add    $0x1,%eax  //eax++&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1840:       80 3f 00                cmpb   $0x0,(%rdi)  //rdi和0比较不相等就跳转&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1843:       75 f4                   jne    1839 &amp;lt;string_length+0xa&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1845:       f3 c3                   repz retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   *1847:       b8 00 00 00 00          mov    $0x0,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    184c:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;phase_6&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;000000000000160e &amp;lt;phase_6&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    160e:       41 55                   push   %r13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1610:       41 54                   push   %r12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1612:       55                      push   %rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1613:       53                      push   %rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1614:       48 83 ec 68             sub    $0x68,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1618:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    161f:       00 00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1621:       48 89 44 24 58          mov    %rax,0x58(%rsp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1626:       31 c0                   xor    %eax,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1628:       49 89 e4                mov    %rsp,%r12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    162b:       48 89 e6                mov    %rsp,%rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    162e:       e8 55 05 00 00          callq  1b88 &amp;lt;read_six_numbers&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1633:       41 bd 00 00 00 00       mov    $0x0,%r13d  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1639:       4c 89 e5                mov    %r12,%rbp    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    163c:       41 8b 04 24             mov    (%r12),%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1640:       83 e8 01                sub    $0x1,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1643:       83 f8 05                cmp    $0x5,%eax &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1646:       76 05                   jbe    164d &amp;lt;phase_6+0x3f&amp;gt;  //必须小于等于否则爆炸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1648:       e8 ff 04 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; *  164d:       41 83 c5 01             add    $0x1,%r13d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1651:       41 83 fd 06             cmp    $0x6,%r13d     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1655:       74 3d                   je     1694 &amp;lt;phase_6+0x86&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1657:       44 89 eb                mov    %r13d,%ebx   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    165a:       48 63 c3                movslq %ebx,%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    165d:       8b 04 84                mov    (%rsp,%rax,4),%eax  //第i个输入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1660:       39 45 00                cmp    %eax,0x0(%rbp)   //检查是否重复重复爆炸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1663:       75 05                   jne    166a &amp;lt;phase_6+0x5c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1665:       e8 e2 04 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    166a:       83 c3 01                add    $0x1,%ebx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    166d:       83 fb 05                cmp    $0x5,%ebx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1670:       7e e8                   jle    165a &amp;lt;phase_6+0x4c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1672:       49 83 c4 04             add    $0x4,%r12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1676:       eb c1                   jmp    1639 &amp;lt;phase_6+0x2b&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1678:       48 8b 52 08             mov    0x8(%rdx),%rdx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    167c:       83 c0 01                add    $0x1,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    167f:       39 c8                   cmp    %ecx,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1681:       75 f5                   jne    1678 &amp;lt;phase_6+0x6a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1683:       48 89 54 74 20          mov    %rdx,0x20(%rsp,%rsi,2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1688:       48 83 c6 04             add    $0x4,%rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    168c:       48 83 fe 18             cmp    $0x18,%rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1690:       75 07                   jne    1699 &amp;lt;phase_6+0x8b&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1692:       eb 1b                   jmp    16af &amp;lt;phase_6+0xa1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  * 1694:       be 00 00 00 00          mov    $0x0,%esi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1699:       8b 0c 34                mov    (%rsp,%rsi,1),%ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    169c:       b8 01 00 00 00          mov    $0x1,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16a1:       48 8d 15 88 2b 20 00    lea    0x202b88(%rip),%rdx        # 204230 &amp;lt;node1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16a8:       83 f9 01                cmp    $0x1,%ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16ab:       7f cb                   jg     1678 &amp;lt;phase_6+0x6a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16ad:       eb d4                   jmp    1683 &amp;lt;phase_6+0x75&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16af:       48 8b 5c 24 20          mov    0x20(%rsp),%rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16b4:       48 8d 44 24 20          lea    0x20(%rsp),%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16b9:       48 8d 74 24 48          lea    0x48(%rsp),%rsi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16be:       48 89 d9                mov    %rbx,%rcx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16c1:       48 8b 50 08             mov    0x8(%rax),%rdx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16c5:       48 89 51 08             mov    %rdx,0x8(%rcx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16c9:       48 83 c0 08             add    $0x8,%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16cd:       48 89 d1                mov    %rdx,%rcx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16d0:       48 39 f0                cmp    %rsi,%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16d3:       75 ec                   jne    16c1 &amp;lt;phase_6+0xb3&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16d5:       48 c7 42 08 00 00 00    movq   $0x0,0x8(%rdx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16dc:       00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16dd:       bd 05 00 00 00          mov    $0x5,%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16e2:       48 8b 43 08             mov    0x8(%rbx),%rax    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16e6:       8b 00                   mov    (%rax),%eax       //选择下一个链表的操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16e8:       39 03                   cmp    %eax,(%rbx)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16ea:       7e 05                   jle    16f1 &amp;lt;phase_6+0xe3&amp;gt;   //这句话就是说node必须是降序排列的，否则就                                                                          会爆炸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16ec:       e8 5b 04 00 00          callq  1b4c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16f1:       48 8b 5b 08             mov    0x8(%rbx),%rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16f5:       83 ed 01                sub    $0x1,%ebp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16f8:       75 e8                   jne    16e2 &amp;lt;phase_6+0xd4&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16fa:       48 8b 44 24 58          mov    0x58(%rsp),%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    16ff:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1706:       00 00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1708:       74 05                   je     170f &amp;lt;phase_6+0x101&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    170a:       e8 f1 f7 ff ff          callq  f00 &amp;lt;__stack_chk_fail@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    170f:       48 83 c4 68             add    $0x68,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1713:       5b                      pop    %rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1714:       5d                      pop    %rbp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1715:       41 5c                   pop    %r12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1717:       41 5d                   pop    %r13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    1719:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;arm版本&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#arm版本&#34;&gt;#&lt;/a&gt; arm 版本&lt;/h3&gt;
&lt;p&gt;phase_1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0000000000401028 &amp;lt;phase_1&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401028:       a9bf7bfd        stp     x29, x30, [sp, #-16]!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40102c:       910003fd        mov     x29, sp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401030:       b0000001        adrp    x1, 402000 &amp;lt;submitr+0x440&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401034:       9118c021        add     x1, x1, #0x630&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401038:       94000148        bl      401558 &amp;lt;strings_not_equal&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40103c:       35000060        cbnz    w0, 401048 &amp;lt;phase_1+0x20&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401040:       a8c17bfd        ldp     x29, x30, [sp], #16    //还原栈帧&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401044:       d65f03c0        ret  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401048:       94000205        bl      40185c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40104c:       17fffffd        b       401040 &amp;lt;phase_1+0x18&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;phase_2&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0000000000401050 &amp;lt;phase_2&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401050:       a9bc7bfd        stp     x29, x30, [sp, #-64]! &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401054:       910003fd        mov     x29, sp       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401058:       a90153f3        stp     x19, x20, [sp, #16]   //从低到高依次是29 30 19 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40105c:       9100a3a1        add     x1, x29, #0x28    //x1=x29+40byte&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401060:       9400020e        bl      401898 &amp;lt;read_six_numbers&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401064:       b9402ba0        ldr     w0, [x29, #40]    //也就是x1那处的字节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401068:       35000080        cbnz    w0, 401078 &amp;lt;phase_2+0x28&amp;gt;    //w0！=0时跳转爆炸，也就是第一个数字为0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40106c:       b9402fa0        ldr     w0, [x29, #44]   //第二个数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401070:       7100041f        cmp     w0, #0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401074:       54000040        b.eq    40107c &amp;lt;phase_2+0x2c&amp;gt;  //相等跳转否则顺序执行爆炸，则第二个数字也得是1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401078:       940001f9        bl      40185c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40107c:       9100a3b3        add     x19, x29, #0x28   //第一个数字的位置存放在x19中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401080:       91004274        add     x20, x19, #0x10   //x20中存放x19+16byte后的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401084:       14000004        b       401094 &amp;lt;phase_2+0x44&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401088:       91001273        add     x19, x19, #0x4  //跳转到这里19+4，到20的位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40108c:       eb14027f        cmp     x19, x20  //再次比较19和20相等时可以结束循环，不相等重复操作，而循环次数是                                                     16/4=4次&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401090:       54000120        b.eq    4010b4 &amp;lt;phase_2+0x64&amp;gt;  // b.none&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401094:       b9400260        ldr     w0, [x19]   //x19中的值到w0中，也就是第一个数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401098:       b9400661        ldr     w1, [x19, #4]  //第二个数字到w1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40109c:       0b010000        add     w0, w0, w1   //w0更新为原先加w1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010a0:       b9400a61        ldr     w1, [x19, #8]  //第三个数字存放在w1中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010a4:       6b00003f        cmp     w1, w0   //比较如果相等才可以跳转，否则顺序执行产生爆炸，所以第三个数字是1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010a8:       54ffff00        b.eq    401088 &amp;lt;phase_2+0x38&amp;gt;  // b.none&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010ac:       940001ec        bl      40185c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010b0:       17fffff6        b       401088 &amp;lt;phase_2+0x38&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010b4:       a94153f3        ldp     x19, x20, [sp, #16]   //还原栈帧&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010b8:       a8c47bfd        ldp     x29, x30, [sp], #64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010bc:       d65f03c0        ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;phase_3&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;00000000004010c0 &amp;lt;phase_3&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010c0:       a9be7bfd        stp     x29, x30, [sp, #-32]!  //32字节的空间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010c4:       910003fd        mov     x29, sp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010c8:       910063a3        add     x3, x29, #0x18  //x29+24byte到x3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010cc:       910073a2        add     x2, x29, #0x1c  //x29+28字节到x2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010d0:       b0000001        adrp    x1, 402000 &amp;lt;submitr+0x440&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010d4:       9119a021        add     x1, x1, #0x668   //x1=0x402668&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010d8:       97ffff26        bl      400d70 &amp;lt;__isoc99_sscanf@plt&amp;gt;  //调用sscanf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010dc:       7100041f        cmp     w0, #0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010e0:       5400026d        b.le    40112c &amp;lt;phase_3+0x6c&amp;gt;   //小于等于则爆炸，所以输入要求要大于1个数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010e4:       b9401fa0        ldr     w0, [x29, #28]  //x29+28机x2方中的数放到w0中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010e8:       71000c1f        cmp     w0, #0x3  //比较w0和三，我们就先看等于三的情况&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010ec:       540003e0        b.eq    401168 &amp;lt;phase_3+0xa8&amp;gt;  // b.none&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010f0:       5400022d        b.le    401134 &amp;lt;phase_3+0x74&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010f4:       528029e1        mov     w1, #0x14f                      // #335&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010f8:       7100141f        cmp     w0, #0x5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4010fc:       540002a0        b.eq    401150 &amp;lt;phase_3+0x90&amp;gt;  // b.none&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401100:       528060e1        mov     w1, #0x307                      // #775&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401104:       5400026b        b.lt    401150 &amp;lt;phase_3+0x90&amp;gt;  // b.tstop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401108:       52806601        mov     w1, #0x330                      // #816&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40110c:       7100181f        cmp     w0, #0x6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401110:       54000200        b.eq    401150 &amp;lt;phase_3+0x90&amp;gt;  // b.none&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401114:       52802661        mov     w1, #0x133                      // #307&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401118:       71001c1f        cmp     w0, #0x7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40111c:       540001a0        b.eq    401150 &amp;lt;phase_3+0x90&amp;gt;  // b.none&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401120:       940001cf        bl      40185c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401124:       52800001        mov     w1, #0x0                        // #0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401128:       1400000a        b       401150 &amp;lt;phase_3+0x90&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40112c:       940001cc        bl      40185c &amp;lt;explode_bomb&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401130:       17ffffed        b       4010e4 &amp;lt;phase_3+0x24&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401134:       52807841        mov     w1, #0x3c2                      // #962&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401138:       7100041f        cmp     w0, #0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40113c:       540000a0        b.eq    401150 &amp;lt;phase_3+0x90&amp;gt;  // b.none&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401140:       52806721        mov     w1, #0x339                      // #825&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401144:       5400006c        b.gt    401150 &amp;lt;phase_3+0x90&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401148:       52807b21        mov     w1, #0x3d9                      // #985&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40114c:       35fffea0        cbnz    w0, 401120 &amp;lt;phase_3+0x60&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401150:       b9401ba0        ldr     w0, [x29, #24]  //x29+24即x3存储的位置的值放在w0中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401154:       6b01001f        cmp     w0, w1  //此时w0和w1必须想当否则就会爆炸，也就是说x3处存放的值需为172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401158:       54000040        b.eq    401160 &amp;lt;phase_3+0xa0&amp;gt;  // b.none&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40115c:       940001c0        bl      40185c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401160:       a8c27bfd        ldp     x29, x30, [sp], #32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401164:       d65f03c0        ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401168:       52801581        mov     w1, #0xac                       // w1=#172（w0==3）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40116c:       17fffff9        b       401150 &amp;lt;phase_3+0x90&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;phase_4&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;00000000004011c4 &amp;lt;phase_4&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011c4:       a9be7bfd        stp     x29, x30, [sp, #-32]!  //开辟空间32byte，从低到高放29 30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011c8:       910003fd        mov     x29, sp    //x29保存当前地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011cc:       910063a3        add     x3, x29, #0x18  //x29+24byte位置放置x3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011d0:       910073a2        add     x2, x29, #0x1c  //x3上面放x2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011d4:       b0000001        adrp    x1, 402000 &amp;lt;submitr+0x440&amp;gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011d8:       9119a021        add     x1, x1, #0x668   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011dc:       97fffee5        bl      400d70 &amp;lt;__isoc99_sscanf@plt&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011e0:       7100081f        cmp     w0, #0x2   //说明必须输入两个值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011e4:       54000081        b.ne    4011f4 &amp;lt;phase_4+0x30&amp;gt;  // b.any&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011e8:       b9401fa0        ldr     w0, [x29, #28]  //x2的位置中的数放到w0中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011ec:       7100381f        cmp     w0, #0xe  //比较也就是说x2处必须是&amp;lt;=14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011f0:       54000049        b.ls    4011f8 &amp;lt;phase_4+0x34&amp;gt;  // b.plast  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011f4:       9400019a        bl      40185c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011f8:       528001c2        mov     w2, #0xe                         // #14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011fc:       52800001        mov     w1, #0x0                        // #0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401200:       b9401fa0        ldr     w0, [x29, #28]  //x2中的数放到w0中然后，作为第一个参数，执行func4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401204:       97ffffdb        bl      401170 &amp;lt;func4&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401208:       7100141f        cmp     w0, #0x5     //说明函数返回值需要是5而&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40120c:       54000081        b.ne    40121c &amp;lt;phase_4+0x58&amp;gt;  // b.any&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401210:       b9401ba0        ldr     w0, [x29, #24]    //x3也需要是5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401214:       7100141f        cmp     w0, #0x5    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401218:       54000040        b.eq    401220 &amp;lt;phase_4+0x5c&amp;gt;  // b.none&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40121c:       94000190        bl      40185c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401220:       a8c27bfd        ldp     x29, x30, [sp], #32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401224:       d65f03c0        ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401170 &amp;lt;func4&amp;gt;:  //一眼看出来递归调用依然是取一种最简单的情况	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401170:       a9bf7bfd        stp     x29, x30, [sp, #-16]!  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401174:       910003fd        mov     x29, sp &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401178:       4b010043        sub     w3, w2, w1   //w3=w2-w1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40117c:       0b437c63        add     w3, w3, w3, lsr #31  //w3&amp;gt;0不操作如果&amp;lt;0+1操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401180:       0b830423        add     w3, w1, w3, asr #1   //w3=（w3）/2+w1   //其实就是取中间的数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401184:       6b00007f        cmp     w3, w0  //比较w3和w0，w3-w0&amp;gt;0,就跳转&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401188:       540000cc        b.gt    4011a0 &amp;lt;func4+0x30&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40118c:       52800001        mov     w1, #0x0                        // #0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401190:       5400010b        b.lt    4011b0 &amp;lt;func4+0x40&amp;gt;  // b.tstop   //&amp;lt;=的情况&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401194:       2a0103e0        mov     w0, w1        //这部分讲就是将下界移动到w0中进行返回&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401198:       a8c17bfd        ldp     x29, x30, [sp], #16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40119c:       d65f03c0        ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011a0:       51000462        sub     w2, w3, #0x1  //w2=w3-	1  也就是说这是个二分查找中间值比所找的值大，所                                                         以右边界减小到原来中间值-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011a4:       97fffff3        bl      401170 &amp;lt;func4&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011a8:       531f7801        lsl     w1, w0, #1   //只进行*2操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011ac:       17fffffa        b       401194 &amp;lt;func4+0x24&amp;gt;   //  b只进行跳转程序，不会返回原来程序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011b0:       11000461        add     w1, w3, #0x1   //左边界到原来的中间值+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011b4:       97ffffef        bl      401170 &amp;lt;func4&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011b8:       531f7800        lsl     w0, w0, #1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011bc:       11000401        add     w1, w0, #0x1  //对查找的结果进行*2+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4011c0:       17fffff5        b       401194 &amp;lt;func4+0x24&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;phase_5&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0000000000401228 &amp;lt;phase_5&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401228:       a9bd7bfd        stp     x29, x30, [sp, #-48]!  //开辟48byte&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40122c:       910003fd        mov     x29, sp   //存入29 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401230:       f9000bf3        str     x19, [sp, #16]   //x19中内容存入sp+16字节位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401234:       aa0003f3        mov     x19, x0   //将x0中内容存放到x19中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401238:       940000bd        bl      40152c &amp;lt;string_length&amp;gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40123c:       7100181f        cmp     w0, #0x6  //说明要输入6个字符&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401240:       540002a1        b.ne    401294 &amp;lt;phase_5+0x6c&amp;gt;  // b.any    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401244:       d2800000        mov     x0, #0x0                  // #0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401248:       9100a3a3        add     x3, x29, #0x28     //x29+40byte的地址存入x3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40124c:       b0000002        adrp    x2, 402000 &amp;lt;submitr+0x440&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401250:       91188042        add     x2, x2, #0x620  //x2=402620&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401254:       38606a61        ldrb    w1, [x19, x0]  //存放的第一个字符赋值给w1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401258:       12000c21        and     w1, w1, #0xf   //取w1低四位 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40125c:       3861c841        ldrb    w1, [x2, w1, sxtw]  //x2+w1地址处的字符再赋值给w1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401260:       38236801        strb    w1, [x0, x3]  //w1再存放到x3所指地址的第一个位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401264:       91000400        add     x0, x0, #0x1  //x0+1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401268:       f100181f        cmp     x0, #0x6  //说明循环6次&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40126c:       54ffff41        b.ne    401254 &amp;lt;phase_5+0x2c&amp;gt;  // b.any&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401270:       3900bbbf        strb    wzr, [x29, #46]   //给写入后的字符串加上&amp;quot;\0&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401274:       b0000001        adrp    x1, 402000 &amp;lt;submitr+0x440&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401278:       9119c021        add     x1, x1, #0x670   //x1=402670&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40127c:       9100a3a0        add     x0, x29, #0x28   //x0写入刚才计算得到的字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401280:       940000b6        bl      401558 &amp;lt;strings_not_equal&amp;gt;    //必须相等否则跳转爆炸 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401284:       350000c0        cbnz    w0, 40129c &amp;lt;phase_5+0x74&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401288:       f9400bf3        ldr     x19, [sp, #16]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40128c:       a8c37bfd        ldp     x29, x30, [sp], #48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401290:       d65f03c0        ret&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401294:       94000172        bl      40185c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401298:       17ffffeb        b       401244 &amp;lt;phase_5+0x1c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40129c:       94000170        bl      40185c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4012a0:       17fffffa        b       401288 &amp;lt;phase_5+0x60&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;phase_6&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;00000000004012a4 &amp;lt;phase_6&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012a4:       a9b87bfd        stp     x29, x30, [sp, #-128]!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012a8:       910003fd        mov     x29, sp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012ac:       a90153f3        stp     x19, x20, [sp, #16]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012b0:       f90013f5        str     x21, [sp, #32]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012b4:       9101a3a1        add     x1, x29, #0x68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012b8:       94000178        bl      401898 &amp;lt;read_six_numbers&amp;gt;     //说明读取了六个数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012bc:       d2800015        mov     x21, #0x0                       // #0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012c0:       9101a3b4        add     x20, x29, #0x68  //x29+104byte的地址存放在x20中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012c4:       1400000d        b       4012f8 &amp;lt;phase_6+0x54&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012c8:       94000165        bl      40185c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012cc:       1400000f        b       401308 &amp;lt;phase_6+0x64&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012d0:       11000673        add     w19, w19, #0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012d4:       7100167f        cmp     w19, #0x5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012d8:       540000ec        b.gt    4012f4 &amp;lt;phase_6+0x50&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012dc:       b8757a81        ldr     w1, [x20, x21, lsl #2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012e0:       b873da80        ldr     w0, [x20, w19, sxtw #2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012e4:       6b00003f        cmp     w1, w0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012e8:       54ffff41        b.ne    4012d0 &amp;lt;phase_6+0x2c&amp;gt;  // b.any&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012ec:       9400015c        bl      40185c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012f0:       17fffff8        b       4012d0 &amp;lt;phase_6+0x2c&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012f4:       910006b5        add     x21, x21, #0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012f8:       b8757a80        ldr     w0, [x20, x21, lsl #2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4012fc:       51000400        sub     w0, w0, #0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401300:       7100141f        cmp     w0, #0x5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401304:       54fffe28        b.hi    4012c8 &amp;lt;phase_6+0x24&amp;gt;  // b.pmore&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401308:       110006b3        add     w19, w21, #0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40130c:       f10016bf        cmp     x21, #0x5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401310:       54fffe61        b.ne    4012dc &amp;lt;phase_6+0x38&amp;gt;  // b.any&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401314:       d2800000        mov     x0, #0x0                        // #0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401318:       9101a3a2        add     x2, x29, #0x68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40131c:       528000e3        mov     w3, #0x7                        // #7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401320:       b8607841        ldr     w1, [x2, x0, lsl #2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401324:       4b010061        sub     w1, w3, w1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401328:       b8207841        str     w1, [x2, x0, lsl #2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40132c:       91000400        add     x0, x0, #0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401330:       f100181f        cmp     x0, #0x6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401334:       54ffff61        b.ne    401320 &amp;lt;phase_6+0x7c&amp;gt;  // b.any&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401338:       d2800003        mov     x3, #0x0                        // #0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40133c:       9101a3a6        add     x6, x29, #0x68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401340:       f00000e4        adrp    x4, 420000 &amp;lt;strlen@GLIBC_2.17&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401344:       9100e3a5        add     x5, x29, #0x38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401348:       14000009        b       40136c &amp;lt;phase_6+0xc8&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40134c:       f9400421        ldr     x1, [x1, #8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401350:       11000400        add     w0, w0, #0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401354:       6b02001f        cmp     w0, w2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401358:       54ffffa1        b.ne    40134c &amp;lt;phase_6+0xa8&amp;gt;  // b.any&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40135c:       f82378a1        str     x1, [x5, x3, lsl #3]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401360:       91000463        add     x3, x3, #0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401364:       f100187f        cmp     x3, #0x6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401368:       540000e0        b.eq    401384 &amp;lt;phase_6+0xe0&amp;gt;  // b.none&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40136c:       b86378c2        ldr     w2, [x6, x3, lsl #2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401370:       52800020        mov     w0, #0x1                        // #1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401374:       91044081        add     x1, x4, #0x110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401378:       6b00005f        cmp     w2, w0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40137c:       54fffe8c        b.gt    40134c &amp;lt;phase_6+0xa8&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401380:       17fffff7        b       40135c &amp;lt;phase_6+0xb8&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401384:       f9401fb3        ldr     x19, [x29, #56]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401388:       f94023a0        ldr     x0, [x29, #64]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40138c:       f9000660        str     x0, [x19, #8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401390:       f94027a1        ldr     x1, [x29, #72]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401394:       f9000401        str     x1, [x0, #8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;401398:       f9402ba0        ldr     x0, [x29, #80]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40139c:       f9000420        str     x0, [x1, #8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013a0:       f9402fa1        ldr     x1, [x29, #88]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013a4:       f9000401        str     x1, [x0, #8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013a8:       f94033a0        ldr     x0, [x29, #96]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013ac:       f9000420        str     x0, [x1, #8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013b0:       f900041f        str     xzr, [x0, #8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013b4:       528000b4        mov     w20, #0x5                       // #5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013b8:       14000004        b       4013c8 &amp;lt;phase_6+0x124&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013bc:       f9400673        ldr     x19, [x19, #8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013c0:       71000694        subs    w20, w20, #0x1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013c4:       54000100        b.eq    4013e4 &amp;lt;phase_6+0x140&amp;gt;  // b.none&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013c8:       f9400660        ldr     x0, [x19, #8]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013cc:       b9400261        ldr     w1, [x19]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013d0:       b9400000        ldr     w0, [x0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013d4:       6b00003f        cmp     w1, w0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013d8:       54ffff2a        b.ge    4013bc &amp;lt;phase_6+0x118&amp;gt;  // b.tcont&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013dc:       94000120        bl      40185c &amp;lt;explode_bomb&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013e0:       17fffff7        b       4013bc &amp;lt;phase_6+0x118&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013e4:       a94153f3        ldp     x19, x20, [sp, #16]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013e8:       f94013f5        ldr     x21, [sp, #32]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013ec:       a8c87bfd        ldp     x29, x30, [sp], #128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4013f0:       d65f03c0        ret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;buffer&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#buffer&#34;&gt;#&lt;/a&gt; buffer&lt;/h3&gt;
&lt;p&gt;重定位（Relocation）&lt;/p&gt;
&lt;p&gt;目标：不注入新代码，只覆盖  &lt;code&gt;getbuf()&lt;/code&gt;  的返回地址，让它跳到现有函数  &lt;code&gt;touch1()&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;关键：&lt;/p&gt;
&lt;p&gt;用  &lt;code&gt;objdump -d ctarget&lt;/code&gt;  找出  &lt;code&gt;touch1&lt;/code&gt;  的入口地址。&lt;/p&gt;
&lt;p&gt;计算小端字节序，并在溢出 “刚好到返回地址” 的位置写入这 8 字节地址。&lt;/p&gt;
&lt;p&gt;运行  &lt;code&gt;./hex2raw&lt;/code&gt;  生成原始字节串，再喂给  &lt;code&gt;./ctarget&lt;/code&gt; ，观察 “Touch1!” 输出来验证。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;00000000004018a9 &amp;lt;getbuf&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018a9:       48 83 ec 28             sub    $0x28,%rsp   //分配了40byte的空间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018ad:       48 89 e7                mov    %rsp,%rdi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018b0:       e8 ac 02 00 00          callq  401b61 &amp;lt;Gets&amp;gt;  //调用Get函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018b5:       b8 01 00 00 00          mov    $0x1,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018ba:       48 83 c4 28             add    $0x28,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018be:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;00000000004018bf &amp;lt;touch1&amp;gt;:   //得到了touch1 的地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018bf:       48 83 ec 08             sub    $0x8,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018c3:       48 c1 ec 04             shr    $0x4,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018c7:       48 c1 e4 04             shl    $0x4,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018cb:       c7 05 27 2c 20 00 01    movl   $0x1,0x202c27(%rip)        # 6044fc &amp;lt;vlevel&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018d2:       00 00 00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018d5:       48 8d 3d 48 19 00 00    lea    0x1948(%rip),%rdi        # 403224 &amp;lt;_IO_stdin_used+0x314&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018dc:       e8 df f3 ff ff          callq  400cc0 &amp;lt;puts@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018e1:       bf 01 00 00 00          mov    $0x1,%edi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018e6:       e8 d8 04 00 00          callq  401dc3 &amp;lt;validate&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018eb:       bf 00 00 00 00          mov    $0x0,%edi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018f0:       e8 3b f5 ff ff          callq  400e30 &amp;lt;exit@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;指定参数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二阶段涉及将少量代码作为漏洞利用字符串的一部分注入。&lt;/p&gt;
&lt;p&gt;在文件  &lt;code&gt;ctarget&lt;/code&gt;  中，有一个名为  &lt;code&gt;touch2&lt;/code&gt;  的函数的代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;touch2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;unsigned&lt;/span&gt; val)&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;//注意参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;     vlevel = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;/* Part of validation protocol */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;     &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (val == cookie) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;         &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Touch2!: You called touch2(0x%.8x)\n&amp;quot;&lt;/span&gt;, val);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;         validate(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;     &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;         &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Misfire: You called touch2(0x%.8x)\n&amp;quot;&lt;/span&gt;, val);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;         fail(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;     &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;cookie：0x43227a88&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;00000000004018f5 &amp;lt;touch2&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018f5:       48 83 ec 08             sub    $0x8,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018f9:       89 fa                   mov    %edi,%edx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018fb:       48 c1 ec 04             shr    $0x4,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  4018ff:       48 c1 e4 04             shl    $0x4,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401903:       c7 05 ef 3b 20 00 02    movl   $0x2,0x203bef(%rip)        # 6054fc &amp;lt;vlevel&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40190a:       00 00 00&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40190d:       39 3d f1 3b 20 00       cmp    %edi,0x203bf1(%rip)        # 605504 &amp;lt;cookie&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401913:       75 22                   jne    401937 &amp;lt;touch2+0x42&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401915:       48 8d 35 5c 1a 00 00    lea    0x1a5c(%rip),%rsi        # 403378 &amp;lt;_IO_stdin_used+0x338&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40191c:       bf 01 00 00 00          mov    $0x1,%edi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401921:       b8 00 00 00 00          mov    $0x0,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401926:       e8 b5 f4 ff ff          callq  400de0 &amp;lt;__printf_chk@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40192b:       bf 02 00 00 00          mov    $0x2,%edi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401930:       e8 af 05 00 00          callq  401ee4 &amp;lt;validate&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401935:       eb 20                   jmp    401957 &amp;lt;touch2+0x62&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401937:       48 8d 35 62 1a 00 00    lea    0x1a62(%rip),%rsi        # 4033a0 &amp;lt;_IO_stdin_used+0x360&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40193e:       bf 01 00 00 00          mov    $0x1,%edi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401943:       b8 00 00 00 00          mov    $0x0,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401948:       e8 93 f4 ff ff          callq  400de0 &amp;lt;__printf_chk@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40194d:       bf 02 00 00 00          mov    $0x2,%edi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401952:       e8 5a 06 00 00          callq  401fb1 &amp;lt;fail&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401957:       bf 00 00 00 00          mov    $0x0,%edi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  40195c:       e8 cf f4 ff ff          callq  400e30 &amp;lt;exit@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Level 3&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0000000000401a8e &amp;lt;test&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401a8e:       48 83 ec 08             sub    $0x8,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401a92:       b8 00 00 00 00          mov    $0x0,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401a97:       e8 0d fe ff ff          callq  4018a9 &amp;lt;getbuf&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401a9c:       89 c2                   mov    %eax,%edx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401a9e:       48 8d 35 43 18 00 00    lea    0x1843(%rip),%rsi        # 4032e8 &amp;lt;_IO_stdin_used+0x3d8&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401aa5:       bf 01 00 00 00          mov    $0x1,%edi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401aaa:       b8 00 00 00 00          mov    $0x0,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401aaf:       e8 2c f3 ff ff          callq  400de0 &amp;lt;__printf_chk@plt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ab4:       48 83 c4 08             add    $0x8,%rsp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ab8:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;touch3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; *sval)&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;//注意参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;     vlevel = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;/* Part of validation protocol */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;     &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (hexmatch(cookie, sval)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;         &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Touch3!: You called touch3(\&amp;quot;%s\&amp;quot;)\n&amp;quot;&lt;/span&gt;, sval);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;         validate(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;     &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;         &lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Misfire: You called touch3(\&amp;quot;%s\&amp;quot;)\n&amp;quot;&lt;/span&gt;, sval);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;19&lt;/span&gt;         fail(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt;     &lt;span class=&#34;built_in&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;0000000000401a14 &lt;touch3&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;level4&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ROP 攻击&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0000000000401abf &amp;lt;addval_424&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401abf:       8d 87 a7 50 90 c3       lea    -0x3c6faf59(%rdi),%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ac5:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401ac6 &amp;lt;getval_130&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ac6:       b8 d8 c3 76 0f          mov    $0xf76c3d8,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401acb:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401acc &amp;lt;addval_232&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401acc:       8d 87 48 89 c7 90       lea    -0x6f3876b8(%rdi),%eax     //mov rax rdi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ad2:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401ad3 &amp;lt;getval_104&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ad3:       b8 48 89 c7 c3          mov    $0xc3c78948,%eax    //48 89 c7 rax值存入rdi中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ad8:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401ad9 &amp;lt;addval_489&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ad9:       8d 87 db 48 81 c7       lea    -0x387eb725(%rdi),%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401adf:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401ae0 &amp;lt;setval_484&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ae0:       c7 07 58 90 90 c3       movl   $0xc3909058,(%rdi)      //58出现说明时返回rax的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ae6:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401ae7 &amp;lt;addval_375&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ae7:       8d 87 58 90 90 c3       lea    -0x3c6f6fa8(%rdi),%eax  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401aed:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401aee &amp;lt;addval_499&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401aee:       8d 87 4a 89 c7 c3       lea    -0x3c3876b6(%rdi),%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401af4:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401af5 &amp;lt;mid_farm&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401af5:       b8 01 00 00 00          mov    $0x1,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401afa:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401afb &amp;lt;add_xy&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401afb:       48 8d 04 37             lea    (%rdi,%rsi,1),%rax   //计算偏移量的函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401aff:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b00 &amp;lt;getval_265&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b00:       b8 5d 89 d6 90          mov    $0x90d6895d,%eax  //edx-&amp;gt;esi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b05:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b06 &amp;lt;getval_350&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b06:       b8 89 c1 c4 d2          mov    $0xd2c4c189,%eax  //eax-&amp;gt;ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b0b:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b0c &amp;lt;setval_200&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b0c:       c7 07 48 89 e0 c1       movl   $0xc1e08948,(%rdi)   //rsp-&amp;gt;rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b12:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b13 &amp;lt;setval_339&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b13:       c7 07 89 ca 18 c9       movl   $0xc918ca89,(%rdi)  //ecx-&amp;gt;edx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b19:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b1a &amp;lt;setval_390&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b1a:       c7 07 81 d6 08 db       movl   $0xdb08d681,(%rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b20:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b21 &amp;lt;getval_108&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b21:       b8 48 89 e0 c2          mov    $0xc2e08948,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b26:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b27 &amp;lt;getval_332&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b27:       b8 48 89 e0 c3          mov    $0xc3e08948,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b2c:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b2d &amp;lt;addval_235&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b2d:       8d 87 ca e3 89 c1       lea    -0x3e761c36(%rdi),%eax   //eax-&amp;gt;ecx   401b31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b33:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b34 &amp;lt;addval_154&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b34:       8d 87 89 d6 18 c0       lea    -0x3fe72977(%rdi),%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b3a:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b3b &amp;lt;addval_374&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b3b:       8d 87 8b d6 08 c0       lea    -0x3ff72975(%rdi),%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b41:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b42 &amp;lt;getval_465&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b42:       b8 89 c1 18 d2          mov    $0xd218c189,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b47:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b48 &amp;lt;setval_300&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b48:       c7 07 89 c1 c2 de       movl   $0xdec2c189,(%rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b4e:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b4f &amp;lt;addval_389&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b4f:       8d 87 8d d6 84 d2       lea    -0x2d7b2973(%rdi),%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b55:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b56 &amp;lt;addval_352&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b56:       8d 87 89 ca c3 73       lea    0x73c3ca89(%rdi),%eax  //ecx ——》edx  401b58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b5c:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b5d &amp;lt;setval_233&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b5d:       c7 07 48 89 e0 c7       movl   $0xc7e08948,(%rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b63:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b64 &amp;lt;setval_471&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b64:       c7 07 09 ca 08 d2       movl   $0xd208ca09,(%rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b6a:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b6b &amp;lt;addval_393&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b6b:       8d 87 89 d6 78 c9       lea    -0x36872977(%rdi),%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b71:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b72 &amp;lt;setval_417&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b72:       c7 07 48 89 e0 c7       movl   $0xc7e08948,(%rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b78:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b79 &amp;lt;getval_451&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b79:       b8 89 ca 90 c3          mov    $0xc390ca89,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b7e:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b7f &amp;lt;setval_480&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b7f:       c7 07 89 c1 30 db       movl   $0xdb30c189,(%rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b85:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b86 &amp;lt;addval_242&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b86:       8d 87 89 ca 28 d2       lea    -0x2dd73577(%rdi),%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b8c:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b8d &amp;lt;getval_475&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b8d:       b8 99 ca 08 d2          mov    $0xd208ca99,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b92:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b93 &amp;lt;getval_435&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b93:       b8 09 ca 38 c9          mov    $0xc938ca09,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b98:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401b99 &amp;lt;setval_256&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b99:       c7 07 12 4c 89 e0       movl   $0xe0894c12,(%rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401b9f:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401ba0 &amp;lt;setval_481&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ba0:       c7 07 f8 89 ca 91       movl   $0x91ca89f8,(%rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ba6:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401ba7 &amp;lt;getval_228&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401ba7:       b8 88 48 99 e0          mov    $0xe0994888,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bac:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401bad &amp;lt;addval_149&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bad:       8d 87 89 c1 48 d2       lea    -0x2db73e77(%rdi),%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bb3:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401bb4 &amp;lt;addval_397&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bb4:       8d 87 11 81 c1 c3       lea    -0x3c3e7eef(%rdi),%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bba:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401bbb &amp;lt;setval_421&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bbb:       c7 07 55 e0 a9 d6       movl   $0xd6a9e055,(%rdi)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bc1:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401bc2 &amp;lt;getval_196&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bc2:       b8 89 d6 84 c9          mov    $0xc984d689,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bc7:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401bc8 &amp;lt;getval_174&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bc8:       b8 14 89 c1 c3          mov    $0xc3c18914,%eax    //401bca eax-》ecx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bcd:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401bce &amp;lt;getval_262&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bce:       b8 48 89 e0 c3          mov    $0xc3e08948,%eax    //mov rsp rax  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bd3:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0000000000401bd4 &amp;lt;end_farm&amp;gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bd4:       b8 01 00 00 00          mov    $0x1,%eax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  401bd9:       c3                      retq&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;序章&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序章&#34;&gt;#&lt;/a&gt; 序章&lt;/h2&gt;
&lt;p&gt;1.cpu 内部结构：PC（program count）&lt;mark&gt;大小为一个字的存储空间存储一个将要执行语句的地址，然后不断更新到下一条要执行的指令&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;2. 寄存器文件：临时存放数据的空间&lt;/p&gt;
&lt;p&gt;理解虚拟内存&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-04-05-201413.png&#34; alt=&#34;屏幕截图 2025-04-05 201413&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;linux 核心：一切皆为文件&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-04-05-202431.png&#34; alt=&#34;屏幕截图 2025-04-05 202431&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;信息的表示与处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#信息的表示与处理&#34;&gt;#&lt;/a&gt; 信息的表示与处理&lt;/h2&gt;
&lt;h3 id=&#34;信息的存储&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#信息的存储&#34;&gt;#&lt;/a&gt; 信息的存储：&lt;/h3&gt;
&lt;p&gt;1. 内存看作一个非常的数组，每个数字都有一个地址我把它们的集合称为&lt;mark&gt;虚拟地址空间&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;2. 字长：决定虚拟空间的最大值&lt;/p&gt;
&lt;p&gt;3.&lt;mark&gt; 大端法&lt;/mark&gt;：最高有效字节放在低地址处，对应的就是小端法&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-04-05-203325.png&#34; alt=&#34;屏幕截图 2025-04-05 203325&#34;&gt;&lt;/p&gt;
&lt;p&gt;移位运算&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-04-07-095851.png&#34; alt=&#34;屏幕截图 2025-04-07 095851&#34;&gt;&lt;/p&gt;
&lt;p&gt;左移和逻辑右移一样，但是要注意算术右移移动完之后如果是负数是补 1，&lt;mark&gt;有符号数进行算术右移，无符号为逻辑右移&lt;/mark&gt;，总之就是补它的符号位即可。&lt;/p&gt;
&lt;h3 id=&#34;整数的表示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#整数的表示&#34;&gt;#&lt;/a&gt; 整数的表示&lt;/h3&gt;
&lt;p&gt;**&lt;mark&gt; 原码，反码，补码&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;正数的三者完全一致，而负数的原码为符号位为 1 其他位按照正数计算即可如 - 1 用一个字节表示的话即         1000 0001&lt;/p&gt;
&lt;p&gt;而负数的反码为符号位不变其他位取反，而补码是在反码的基础上再 + 1&lt;/p&gt;
&lt;p&gt;-1 的补码就是 1111 1111 而从补码再转换到原码，就是除去符号位之后减 1 然后再取反&lt;/p&gt;
&lt;p&gt;**&lt;mark&gt; 补码的直观理解&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;首先我们的内存存储有符号数可以看作一个我们日常生活中的圆盘，比如 8 点到十点可以顺时针旋转两格也可以，逆时针旋转 10 就是 8-10 的效果等同于 8+2，这样我们把一个减法转换为加法，而 2 是通过公式 &lt;mark&gt;2 = 模 —10&lt;/mark&gt; 来得到的，同理我们理解补码的计算规则，先求出反码来然后 + 1 得到补码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-04-07-103211.png&#34; alt=&#34;屏幕截图 2025-04-07 103211&#34;&gt;&lt;/p&gt;
&lt;p&gt;例子：101-010 即 5-2 则它等同于 5+（&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;2^3&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8141em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -2）  模为 8&lt;/p&gt;
&lt;p&gt;010 的反码就是各个位取反为 101，而&lt;mark&gt;任意数字加上他的反码都为每一位都是 1&lt;/mark&gt;，010+101=111，而这时候加上 1 就变成了模，（这也就是为什么我们要求取完反码加 1），所以模 - 2 即可写成（010+101+1）-010=101+1 就是反码加 1&lt;/p&gt;
&lt;p&gt;**&lt;mark&gt; 有无符号之间数字的转变&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;原则：位模式不变，但是解释这些位的方式改变了&lt;/p&gt;
&lt;p&gt;首先看无符号和有符号的映射关系（&lt;mark&gt;这里都对应的是补码，而不是原码&lt;/mark&gt;，x 向量是补码然后这个函数目的是求它的真值）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-04-07-104933.png&#34; alt=&#34;屏幕截图 2025-04-07 104933&#34;&gt;&lt;/p&gt;
&lt;p&gt;w 表示位数，上面是无符号数，下面为有符号数，x（w-1）位表示的就是最高位&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-04-08-202033.png&#34; alt=&#34;屏幕截图 2025-04-08 202033&#34;&gt;&lt;/p&gt;
&lt;p&gt;从上面的式子做差我们可以得到：&lt;/p&gt;
&lt;p&gt;1. 不论有无符号当最高位为 0，则两者一致&lt;/p&gt;
&lt;p&gt;2. 若最高位为 1，无符号转为有符号方法就是在原来基础上 ==-2 的 w 次 ==，w 为位数&lt;/p&gt;
&lt;p&gt;反之，有符号转无符号就是 ==+2 的 w 次方 ==&lt;/p&gt;
&lt;p&gt;**&lt;mark&gt; 注意&lt;/mark&gt;：&lt;br&gt;
c 语言中，有符号数和无符号数进行比较时，会把有符号数转换为无符号数&lt;/p&gt;
&lt;p&gt;**&lt;mark&gt; 较小数据类型转换为较大数据类型&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;当为无符号数时补零即可在前面，当为有符号数且最高位为 1，则在前面补 1，（好理解的方法就是，补一之后求原码可以保持一致，那么数据就一致）&lt;/p&gt;
&lt;p&gt;**&lt;mark&gt; 较大类型转换较小数据类型&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;先看无符号数：int -&amp;gt;short 高 16 位数字被丢弃，相当于对原来的数字 mod 2 的 16 次&lt;/p&gt;
&lt;p&gt;有符号数：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-04-08-205056.png&#34; alt=&#34;屏幕截图 2025-04-08 205056&#34;&gt;&lt;/p&gt;
&lt;p&gt;先转无符号再截断再转有符号&lt;/p&gt;
&lt;h3 id=&#34;整数的运算&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#整数的运算&#34;&gt;#&lt;/a&gt; 整数的运算&lt;/h3&gt;
&lt;p&gt;&lt;mark&gt;一个原则：同号相加会产生溢出&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;**&lt;mark&gt; 无符号数的加法&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-04-09-095532.png&#34; alt=&#34;屏幕截图 2025-04-09 095532&#34;&gt;&lt;/p&gt;
&lt;p&gt;判断是否溢出的程序，右边是对逻辑的简单证明&lt;/p&gt;
&lt;p&gt;**&lt;mark&gt; 有符号数的加法&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-04-09-101341.png&#34; alt=&#34;屏幕截图 2025-04-09 101341&#34;&gt;&lt;/p&gt;
&lt;p&gt;**&lt;mark&gt; 无符号数的减法&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;利用的思想是：减去一个数等于加上这个数的相反数，而求相反数的方法就是利用 2^w 溢出导致结果也可以看作 1 所以&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-04-13-230325.png&#34; alt=&#34;屏幕截图 2025-04-13 230325&#34;&gt;&lt;/p&gt;
&lt;p&gt;求 x 的逆元的方法&lt;/p&gt;
&lt;p&gt;**&lt;mark&gt; 有符号数的减法&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250518141819479.png&#34; alt=&#34;image-20250518141819479&#34;&gt;&lt;/p&gt;
&lt;p&gt;由于有符号数正负的不对称所以，最小值的逆元就是它本身&lt;/p&gt;
&lt;p&gt;**&lt;mark&gt; 无符号数的乘法运算&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;w 位数字相乘大概率是 2w 位但是会截断到 w 位&lt;/p&gt;
&lt;p&gt;**&lt;mark&gt; 补码的乘法&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;乘法左移即可，而除法无符号数右移即可，有符号要进行算术右移，但还有以一个注意的点是，负数右移截断之后通常会结果 - 1，如 - 7/4 正常结果是 - 1 而由于右移之后结果是 - 2，所以我们要加一个偏置而这个偏置的大小是 2^n-1 n 是右移位数&lt;/p&gt;
&lt;p&gt;**&lt;mark&gt; 除法舍入问题&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250518143021785.png&#34; alt=&#34;image-20250518143021785&#34;&gt;&lt;/p&gt;
&lt;p&gt;补码除法为了向下取整所以需要在 &amp;lt; 0 的情况下加一个偏置量计算方法是：&lt;mark&gt;（1 &amp;lt;&amp;lt;k）-1&lt;/mark&gt;,k 为左移的位数。&lt;/p&gt;
&lt;h3 id=&#34;浮点数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#浮点数&#34;&gt;#&lt;/a&gt; 浮点数&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-04-13-234334.png&#34; alt=&#34;屏幕截图 2025-04-13 234334&#34;&gt;&lt;/p&gt;
&lt;p&gt;normalized 规格化的值&lt;/p&gt;
&lt;p&gt;denormalized 非规格化的值  infinity 特殊值（表示无穷大或者无穷小或者不是一个数）&lt;/p&gt;
&lt;p&gt;对于&lt;mark&gt;规格化的值&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;float：&lt;br&gt;
&lt;img data-src=&#34;/images/csapp/image-20250518144941906.png&#34; alt=&#34;image-20250518144941906&#34;&gt;&lt;/p&gt;
&lt;p&gt;右上角是计算公式&lt;/p&gt;
&lt;p&gt;而对于&lt;mark&gt;非规格化的值和特殊值建议看原书&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;非规格化&lt;mark&gt; E=1-bias&lt;/mark&gt;，&lt;mark&gt;M=0.fff&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;int 和 float 型的转换&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250518151537696.png&#34; alt=&#34;image-20250518151537696&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;程序的机器级表示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#程序的机器级表示&#34;&gt;#&lt;/a&gt; 程序的机器级表示&lt;/h2&gt;
&lt;p&gt;调用者保存：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250423100046973.png&#34; alt=&#34;image-20250423100046973&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里的 funA 是调用者函数，B 是被调用者而 % rbx 的存储的值在 A 中前后应该保持一致，所以我们在调用 B 函数之前保存 rbx 的值然后在调用结束之后再回复&lt;/p&gt;
&lt;p&gt;被调用者策略：&lt;/p&gt;
&lt;p&gt;就是再 funB 中操作在操作前后进行保存，然后在 ret（就是返回的）的前一步恢复 rbx 的值&lt;/p&gt;
&lt;h3 id=&#34;寄存器与数据传送指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#寄存器与数据传送指令&#34;&gt;#&lt;/a&gt; 寄存器与数据传送指令&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250423100839537.png&#34; alt=&#34;image-20250423100839537&#34;&gt;&lt;/p&gt;
&lt;p&gt;内存引用：（）括号中为一个寄存器实际的含义就是&lt;mark&gt;机器将 rbx 中的值看作一个地址然后将这个地址中的内容存储到 rax 中&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;操作数中（按 at&amp;amp;t）后面是目的操作数，前面是源操作数，而目的操作数不可以是立即数&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250423102751632.png&#34; alt=&#34;image-20250423102751632&#34;&gt;&lt;/p&gt;
&lt;p&gt;举个例子如果想要实现，一个数据从一个位置到另一个位置，我们的操作如上&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//例如我们要把%rbx中指向地址的值放到%rdx中那么我们需要一个寄存器做中间传递&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov (%rbx)  %rax   //内存引用就是把rbx中存储地址位置的值取出来放到rax中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mov %rax  (%rdx)    //rax中的值放到rdx中存储地址位置上&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;栈中数据与传送指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#栈中数据与传送指令&#34;&gt;#&lt;/a&gt; 栈中数据与传送指令&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250423105750263.png&#34; alt=&#34;image-20250423105750263&#34;&gt;&lt;/p&gt;
&lt;p&gt;在内存中就是我们一开始放的图片，栈是高地址向低地址生长的，而 push 操作其实是 rsp（栈顶指针 - 8）然后把 rax 中的值放到 rsp 指向的位置，pop 类似&lt;/p&gt;
&lt;h3 id=&#34;算术逻辑与逻辑运算指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算术逻辑与逻辑运算指令&#34;&gt;#&lt;/a&gt; 算术逻辑与逻辑运算指令&lt;/h3&gt;
&lt;p&gt;leaq：加载有效地址&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250423110651314.png&#34; alt=&#34;image-20250423110651314&#34;&gt;&lt;/p&gt;
&lt;p&gt;leaq 并不是要取地址中的值来赋值给 rax 而是单纯计算出一个值放到 rax 中，计算的方法同上&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250423111633188.png&#34; alt=&#34;image-20250423111633188&#34;&gt;&lt;/p&gt;
&lt;p&gt;来实现乘法运算，比例因子只能是 1 2 4 8 所以不能直接 * 12&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250423111906308.png&#34; alt=&#34;image-20250423111906308&#34;&gt;&lt;/p&gt;
&lt;p&gt;二元操作，第二个数既是源操作数也是目的操作数，&lt;mark&gt;所以它不能是一个立即数，只能是立即数或者寄存器&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250423112455099.png&#34; alt=&#34;image-20250423112455099&#34;&gt;&lt;/p&gt;
&lt;p&gt;移位运算，k 可以是立即数也可以是存储在 % cl 中的数&lt;mark&gt;移动的位数只看 cl 中的低 w 位&lt;/mark&gt;&lt;/p&gt;
&lt;h3 id=&#34;指令与条件码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令与条件码&#34;&gt;#&lt;/a&gt; 指令与条件码&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250426150945558.png&#34; alt=&#34;image-20250426150945558&#34;&gt;&lt;/p&gt;
&lt;p&gt;条件码寄存器：&lt;br&gt;
CF：无符号数进位时，设置为 1&lt;/p&gt;
&lt;p&gt;ZF：上一个条件执行完之后如果结果为 0，设置为 1&lt;/p&gt;
&lt;p&gt;SF：语句 1 执行完为负时设置为 1&lt;/p&gt;
&lt;p&gt;OF：有符号数溢出时设置为 1&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cmp和test指令&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmpq %rax %rdx  //类似sub操作但是结果只存放在条件码寄存器之中对目的寄存器无影响&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test同add&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;mark&gt;* 接下来我们看如何用条件码来进行逻辑判断&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250426152333071.png&#34; alt=&#34;image-20250426152333071&#34;&gt;&lt;/p&gt;
&lt;p&gt;比较 ab 两个值是否相等，如果相等返回 1，不等则返回 0  sete 中的结尾 e 时 equal 的意思它代表的含义就是下面两条语句，之后再对 al 进行扩充位数&lt;/p&gt;
&lt;p&gt;再来看一个复杂的将 a==b 修改为 a&amp;lt;b&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250426152854892.png&#34; alt=&#34;image-20250426152854892&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时使用指令 setl 而这个指令实际上完成的操作是对符号位和溢出位取异或进行检查，原理如下如果 a-b 不发生溢出，那么符号位就是最终所要的真值，但是如果发生溢出&lt;mark&gt; case3 来看符号位为 0 但是 a 明显小于 b 这时候，sf 与最终真值不符，case4 也是这个道理&lt;/mark&gt;所以我们进行一个异或操作来得到最终的真值&lt;/p&gt;
&lt;h3 id=&#34;不同寄存器小结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不同寄存器小结&#34;&gt;#&lt;/a&gt; 不同寄存器小结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;% rax (% eax) 用于做累加&lt;/li&gt;
&lt;li&gt;% rcx (% ecx) 用于计数&lt;/li&gt;
&lt;li&gt;% rdx (% edx) 用于保存数据&lt;/li&gt;
&lt;li&gt;% rbx (% ebx) 用于做内存查找的基础地址&lt;/li&gt;
&lt;li&gt;% rsi (% esi) 用于保存源索引值&lt;/li&gt;
&lt;li&gt;% rdi (% edi) 用于保存目标索引值&lt;/li&gt;
&lt;li&gt;% rip 始终保存&lt;strong&gt;下一条要执行指令的线性地址&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;过程函数调用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过程函数调用&#34;&gt;#&lt;/a&gt; 过程（函数调用）&lt;/h3&gt;
&lt;p&gt;栈帧：函数执行所需要的空间远超出寄存器的大小，借助栈上的空间，这部分空间就成为栈帧&lt;/p&gt;
&lt;p&gt;通过 call 指令调用函数，并且在执行函数之前要把返回地址压入栈中&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;传递参数如果大于 6 需要用栈来传递参数，而用栈传递数据的大小需要向 8 的倍数对齐例如如果之占一个字节也需要分配 8 个字节的空间&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250428101605633.png&#34; alt=&#34;image-20250428101605633&#34;&gt;&lt;/p&gt;
&lt;p&gt;call 指令调用时要把下一条指令的地址传入栈中然后函数调用结束，这个返回地址弹栈存放在 rip 中，就可以实现返回 main 函数继续执行下面的指令&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250428102609404.png&#34; alt=&#34;image-20250428102609404&#34;&gt;&lt;/p&gt;
&lt;p&gt;前六个参数不需要对其，后两个用栈传递需要对齐&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;递归相对应汇编&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250428105039740.png&#34; alt=&#34;image-20250428105039740&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;rfact:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    pushq   %rbx    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    movq    %rdi, %rbx   //被调用者保存先把n保存在rbx中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    movl    $1, %eax    //函数返回值是rax想当于计算result=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cmpq    $1, %rdi   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    jle     .L35    //如果&amp;lt;= 跳转L35. 返回rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    leaq    -1(%rdi), %rdi   //否则先计算新的参数即n-1存放在rdi中&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    call    rfact       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    imulq   %rbx, %rax   //call完的返回值存放在rax中再与n相乘然后返回&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.L35:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    popq    %rbx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;mark&gt;简述 rbp 和 rsp&lt;/mark&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight txt&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;高地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;──────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ ... 上层调用者的栈帧 ... ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;──────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ return RIP       ] ← 存在 call 指令自动 push 的返回地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;──────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ old %rbp         ] ← pushq %rbp （RBP@entry）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;────────────────────── ← ← ← ← ← ← ←  ← movq %rsp,%rbp 后此处为 RBP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;↑                 ↑&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│                 │&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│    %rbp 栈帧基址  │&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│ (固定不动，用它作寻址基准)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;↓                 ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;──────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ 局部变量 #1      ] ← -8(%rbp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;──────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ 局部变量 #2      ] ← -16(%rbp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;──────────────────────&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ … 更多局部 …    ] ← -offset(%rbp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;────────────────────── ← ← ← ← ← ← ←  ← subq $N,%rsp 后此处为 %rsp 初始位置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;↑                 ↑&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│                 │&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│    %rsp 栈顶     │&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│ (动态移动，用它分配/释放栈空间)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;↓                 ↓&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;低地址&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;所以 rbp 不动通过对他正偏移和负偏移来访问参数和局部变量&lt;/p&gt;
&lt;h3 id=&#34;缓冲区溢出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缓冲区溢出&#34;&gt;#&lt;/a&gt; 缓冲区溢出&lt;/h3&gt;
&lt;p&gt;（把实验搞完就会了）&lt;/p&gt;
&lt;h2 id=&#34;linkers&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linkers&#34;&gt;#&lt;/a&gt; Linkers&lt;/h2&gt;
&lt;h3 id=&#34;须知&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#须知&#34;&gt;#&lt;/a&gt; 须知&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可重定位目标文件 Relocatable object file (.o file)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个  &lt;code&gt;.o&lt;/code&gt;  文件都是由对应的  &lt;code&gt;.c&lt;/code&gt;  文件通过编译器和汇编器生成，包含代码和数据，可以与其他可重定位目标文件合并创建一个可执行或共享的目标文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可执行目标文件 Executable object file（a.out file)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由链接器生成，可以直接通过加载器加载到内存中充当进程执行的文件，包含代码和数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;共享目标文件 Shared object file (.so file)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 windows 中被称为 Dynamic Link Libraries (DLLs)，是类特殊的可重定位目标文件，可以在链接 (静态共享库) 时加入目标文件或加载时或运行时 (动态共享库) 被动态的加载到内存并执行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;强符号：函数和初始化的全局变量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;弱符号：未初始化的全局变量&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;链接器在处理强弱符号的时候遵守以下规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不能出现多个同名的强符号，不然就会出现链接错误&lt;/li&gt;
&lt;li&gt;如果有同名的强符号和弱符号，选择强符号，也就意味着弱符号是『无效』d 而&lt;/li&gt;
&lt;li&gt;如果有多个弱符号，随便选择一个&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 文件 p1.c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1() &amp;#123; ... &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// -----------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 文件 p2.c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;double&lt;/span&gt; x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p2() &amp;#123; ... &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里 p1 和 p2 中定义的变量都是弱符号，我们对 p2 中的 x 进行写入时，居然可能会影响到 p1 中的 y！想想为什么？其实原因很简单，以为 x 实际上引用的是同一个地址，而 double 的字节数是 int 的两倍，所以 y 就『躺枪』了。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 文件 p1.c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; y = &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1() &amp;#123; ... &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// -----------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 文件 p2.c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;double&lt;/span&gt; x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p2() &amp;#123; ... &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个例子是强弱符号间的引用了，p1 中的变量因为初始化的缘故，是强符号，所以在 p2 中引用 x 时，实际上操作的是 p1 中定义的全局变量的值，而因为 p2 中 x 是 double 类型，所以一旦进行改动，实际上就 p1 中 x 和 y 都会受到影响。&lt;/p&gt;
&lt;h3 id=&#34;elf主要内容&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#elf主要内容&#34;&gt;#&lt;/a&gt; ELF 主要内容&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250512110855764.png&#34; alt=&#34;image-20250512110855764&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ELF header
&lt;ul&gt;
&lt;li&gt;包含 word size, byte ordering, file type (.o, exec, .so), machine type, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Segment header table
&lt;ul&gt;
&lt;li&gt;包含 page size, virtual addresses memory segments (sections), segment sizes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.text section
&lt;ul&gt;
&lt;li&gt;代码部分&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.rodata section
&lt;ul&gt;
&lt;li&gt;只读数据部分，例如跳转表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.data section
&lt;ul&gt;
&lt;li&gt;初始化的全局变量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.bss section
&lt;ul&gt;
&lt;li&gt;未初始化的全局变量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.symtab section
&lt;ul&gt;
&lt;li&gt;包含 symbol table, procudure 和 static variable names 以及 section names 和 location&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.rel.txt section
&lt;ul&gt;
&lt;li&gt;.text section 的重定位信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.rel.data section
&lt;ul&gt;
&lt;li&gt;.data section 的重定位信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;.debug section
&lt;ul&gt;
&lt;li&gt;包含 symbolic debugging ( &lt;code&gt;gcc -g&lt;/code&gt; ) 的信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Section header table
&lt;ul&gt;
&lt;li&gt;每个 section 的大小和偏移量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;重定位&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#重定位&#34;&gt;#&lt;/a&gt; 重定位&lt;/h3&gt;
&lt;h2 id=&#34;处理器体系结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#处理器体系结构&#34;&gt;#&lt;/a&gt; 处理器体系结构&lt;/h2&gt;
&lt;h3 id=&#34;指令系统&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令系统&#34;&gt;#&lt;/a&gt; 指令系统&lt;/h3&gt;
&lt;p&gt;用一种简单的 Y86 指令系统&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250525144114828.png&#34; alt=&#34;image-20250525144114828&#34;&gt;&lt;/p&gt;
&lt;p&gt;以上是 mov 的四种指令，高位的第一个字节高四位表示操作码，第四位表示实现功能（例如图中都是 0 代表实现 mov 操作）&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;因为 Y86 中定义了 15 个寄存器，所以编号是 0x0~0xe，所以如图第二行中 F 表示的是没有寄存器&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;整数操作指令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250525144811806.png&#34; alt=&#34;image-20250525144811806&#34;&gt;&lt;/p&gt;
&lt;p&gt;功能部分不同&lt;/p&gt;
&lt;h3 id=&#34;逻辑门&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#逻辑门&#34;&gt;#&lt;/a&gt; 逻辑门&lt;/h3&gt;
&lt;p&gt;（等到大二学数字电路）&lt;/p&gt;
&lt;h3 id=&#34;指令的顺序实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令的顺序实现&#34;&gt;#&lt;/a&gt; 指令的顺序实现&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250525151415378.png&#34; alt=&#34;image-20250525151415378&#34;&gt;&lt;/p&gt;
&lt;p&gt;cpu 执行的操作&lt;/p&gt;
&lt;p&gt;Decode，Write Back 针对寄存的读入与写的两个操作，Execute 是对 ALU 的操作（3 种），而 Memory 是对内存的读入和写入操作。Update 就是把 pc 设置成下一条指令的地址&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250525153107462.png&#34; alt=&#34;image-20250525153107462&#34;&gt;&lt;/p&gt;
&lt;p&gt;跳转指令执行阶段通过对条件码的计算来确定是否要进行跳转指令&lt;/p&gt;
&lt;h3 id=&#34;各个阶段的硬件实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#各个阶段的硬件实现&#34;&gt;#&lt;/a&gt; 各个阶段的硬件实现&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Fetch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以 pc 的值为起始地址取 10bytes 内容（因为 y86 中最长指令为 10 字节），之后分为两个部分一部分为 1 字节另一部分为 9 字节，1 字节内容高四位和第四位分为指令代码和指令功能&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250527081006193.png&#34; alt=&#34;image-20250527081006193&#34;&gt;&lt;/p&gt;
&lt;p&gt;icode 部分可以用来判断是否指令合法，需要寄存器数量和是否存在常数 C，这样的话就可以决定这条指令的长度，之后 PC 加上这个长度就是下一条指令的的起始&lt;/p&gt;
&lt;p&gt;如果需要两个寄存器的话，Align 第一个字节的高四位和第四位分别存入 rA 和 rB，如果只需要一个寄存器那么另一个会设置为 0xF。&lt;/p&gt;
&lt;p&gt;当 Need_regids==1 时，Align 的 2~9 字节表示常数 C; 当它值为 0 时，Align 的 1-8 字节表示常数&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Decode Stage&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250527081756967.png&#34; alt=&#34;image-20250527081756967&#34;&gt;&lt;/p&gt;
&lt;p&gt;用 icode 来判断是否需要 rsp 的值，右边四条指令中只出现一个寄存器但在实际调用时还需要知道 rsp 的值，所以用 icode 来判断&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Execute&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250527082423154.png&#34; alt=&#34;image-20250527082423154&#34;&gt;&lt;/p&gt;
&lt;p&gt;CC 为条件码，我们只在算术逻辑运算中更新 CC，所以当指令是对&lt;mark&gt;内存引用地址的运算&lt;/mark&gt;，或者&lt;mark&gt;栈的操作时&lt;/mark&gt;，CC 不更新。&lt;/p&gt;
&lt;p&gt;Cond 由 ifun 和 CC 来产生一个值（针对跳转指令），当 cnd==1，跳转否则不跳转&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Memory Stage&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250527083452341.png&#34; alt=&#34;image-20250527083452341&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过计算来得到 Stat 值&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Write Back Stage&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/screenshot-2025-05-27-083622.png&#34; alt=&#34;屏幕截图 2025-05-27 083622&#34;&gt;&lt;/p&gt;
&lt;p&gt;遇到 cmov 之类的指会取决于 cnd 的值，如果为 1 执行指令，当为 1 时&lt;mark&gt;会设置寄存器为 0xF 来禁止写入&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PC 值的更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250527084018750.png&#34; alt=&#34;image-20250527084018750&#34;&gt;&lt;/p&gt;
&lt;p&gt;4 种更新 pc 情况&lt;/p&gt;
&lt;h3 id=&#34;流水线的通用原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流水线的通用原理&#34;&gt;#&lt;/a&gt; 流水线的通用原理&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250527090600033.png&#34; alt=&#34;image-20250527090600033&#34;&gt;&lt;/p&gt;
&lt;p&gt;当时钟寄存器处于高电位时，寄存器值才会更新&lt;/p&gt;
&lt;h3 id=&#34;流水线的硬件实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流水线的硬件实现&#34;&gt;#&lt;/a&gt; 流水线的硬件实现&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;SEQ+：电路重定时&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250527092659323.png&#34; alt=&#34;image-20250527092659323&#34;&gt;&lt;/p&gt;
&lt;p&gt;引入 5 个寄存器，和上面一样构造流水线，不同的是把第一个寄存器存放 PredPC 值（预测）&lt;/p&gt;
&lt;h3 id=&#34;数据冒险&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据冒险&#34;&gt;#&lt;/a&gt; 数据冒险&lt;/h3&gt;
&lt;p&gt;指令之间有连接性，下一体指令往往需要上一条指令的结果&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250530131127772.png&#34; alt=&#34;image-20250530131127772&#34;&gt;&lt;/p&gt;
&lt;p&gt;例如上图的指令&lt;/p&gt;
&lt;p&gt;第三条指令在 decode 阶段由于上面两个指令的 write 还没有执行，直接 decode 第三条导致实际作用产生偏差&lt;/p&gt;
&lt;p&gt;对此我们可以引入 bubble 来实现&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250530131251082.png&#34; alt=&#34;image-20250530131251082&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时在执行 add 操作的 decode 阶段上面两个操作的写回部分已经完成，但是依然存在很大的问题，加入很多 bubble 导致效率降低，所以我们引入另一种方法&lt;mark&gt;数据转发&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;可以看到我们可以让上面的指令不经过寄存器直接把第三条需要的立即数直接放在 add 指令中，所以在设计中进入 == 至于实现方法就是在计算阶段中 alu 执行结果传输到 decode 阶段（具体实现过程不需要知道）&lt;/p&gt;
&lt;p&gt;所以我们可以通过 bubble 和数据转发提升效率，而一般的程序指令也是通过这两种方法组合实现&lt;/p&gt;
&lt;h3 id=&#34;控制冒险&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#控制冒险&#34;&gt;#&lt;/a&gt; 控制冒险&lt;/h3&gt;
&lt;p&gt;正常情况下一个循环需要找到下一条的 pc 指令，进入流水，但是如果遇到 ret 指令那我们必须在执行完这条的 5 个部分才能从栈中找到所需要的，或者遇到条件跳转指令，我们需要上面代码执行之后的结果才能判断，那么这就是控制冒险&lt;/p&gt;
&lt;p&gt;ret 进入访存阶段之后我们才可以执行下面的指令，所以急促通过暂停&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250530132759935.png&#34; alt=&#34;image-20250530132759935&#34;&gt;&lt;/p&gt;
&lt;p&gt;跳转指令&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250530133521577.png&#34; alt=&#34;image-20250530133521577&#34;&gt;&lt;/p&gt;
&lt;p&gt;对左边代码做出解释，这是简化过的&lt;mark&gt;如果跳转 target 函数内部要执行接下来的两条 irmovq 指令，如果不跳转执行第三条 irmovq 指令&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;条件预测的过程比较复杂，但我们假设机器对于所有的预测都是执行，所以当我们遇到 jne 直接下一个周期塞入第一条 irmovq 指令，接下来周期再放入一条 movq 指令，好下一个周期到了第五个周期 jne 指令已经计算完成，如果现在我们发现结果是不跳转，那么我们现在的任务是删除这两条指令，我们采用的方法是&lt;mark&gt;在第五个周期第三条指令的执行阶段放入 bubble，第六周期对第四条指令实行同样的操作&lt;/mark&gt;，接着不跳转的指令进入流水。&lt;/p&gt;
&lt;h2 id=&#34;优化程序性能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优化程序性能&#34;&gt;#&lt;/a&gt; 优化程序性能&lt;/h2&gt;
&lt;h3 id=&#34;程序优化的局限性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#程序优化的局限性&#34;&gt;#&lt;/a&gt; 程序优化的局限性&lt;/h3&gt;
&lt;p&gt;1. 内存别名引用：例如指针指向相同的位置和不同的位置，在优化前后产生了不同的效果，这种优化由于不安全所以无法采用&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250606132806318.png&#34; alt=&#34;image-20250606132806318&#34;&gt;&lt;/p&gt;
&lt;p&gt;例如，在大多数情况下 add1 执行六次取址，而 add2 只执行三次，效率是大于下面的但是如果是 xy yp 指向的内存一致的情况，会导致最终的结果不一致，所以这种优化不可以使用&lt;/p&gt;
&lt;p&gt;2. 函数调用&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250606133215506.png&#34; alt=&#34;image-20250606133215506&#34;&gt;&lt;/p&gt;
&lt;p&gt;counter 是一种全局变量而 func1 和 func2 完全效果不一致，所以不可以优化为 2&lt;/p&gt;
&lt;p&gt;度量程序性能，我们引入&lt;mark&gt; CPE&lt;/mark&gt;（每个元素所要执行的周期数）&lt;/p&gt;
&lt;h3 id=&#34;优化程序性能-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优化程序性能-2&#34;&gt;#&lt;/a&gt; 优化程序性能&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;代码移动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250606134352331.png&#34; alt=&#34;image-20250606134352331&#34;&gt;&lt;/p&gt;
&lt;p&gt;减少了函数 strlen 的调用可以减少大量的时间&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;减少内存引用的次数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250606135328276.png&#34; alt=&#34;image-20250606135328276&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250606135259030.png&#34; alt=&#34;image-20250606135259030&#34;&gt;&lt;/p&gt;
&lt;p&gt;每次累计值需要取址，写入，当我们改用加入一个临时变量的时候，效率可以大大提升&lt;/p&gt;
&lt;h3 id=&#34;现代处理器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#现代处理器&#34;&gt;#&lt;/a&gt; 现代处理器&lt;/h3&gt;
&lt;p&gt;ICU（&lt;mark&gt;指令控制单元&lt;/mark&gt;：从内存中读取指令序列），EU（&lt;mark&gt;执行单元&lt;/mark&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250610083719434.png&#34; alt=&#34;image-20250610083719434&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;数据流图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据流图&#34;&gt;#&lt;/a&gt; 数据流图&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250610084449105.png&#34; alt=&#34;image-20250610084449105&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们将右图的四条汇编指令，可以翻译为左边的五个操作，那么我们可以将寄存器分为四类：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;只读&lt;/strong&gt;：寄存器作为源值，可作为数据 / 地址，但在执行中不会被修改&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;只写&lt;/strong&gt;：只写入数据的寄存器，这个程序内无&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;局部&lt;/strong&gt;：比如条件寄存器，只在循环内部修改和使用，每一次迭代之间不相关&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;循环&lt;/strong&gt;：可以作为源值也可以作为目的，每一次迭代需要上一次迭代的值&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250610085641460.png&#34; alt=&#34;image-20250610085641460&#34;&gt;&lt;/p&gt;
&lt;p&gt;因为在程序执行中分支预测功能，所以判断指令可以简化掉，简化之后的操作可以抽象为左图，当循环次数为 n 时就可以形成右图的循环链路，左侧为累积相乘右图为下标变换，而制约程序执行速度的就是左侧的浮点数乘法&lt;/p&gt;
&lt;h3 id=&#34;循环展开&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#循环展开&#34;&gt;#&lt;/a&gt; 循环展开&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250610204213640.png&#34; alt=&#34;image-20250610204213640&#34;&gt;&lt;/p&gt;
&lt;p&gt;这是我们之前对于一个程序的优化，我们称之为&lt;mark&gt; 2*1 循环展开&lt;/mark&gt;，（2 代表每次循环处理两个数组元素），但是我们从 CPE 中测定得到对于 int 加法类型确实性能有提升（循环次数减少的作用），但是对于其他情况性能提升的作用很弱，那么增加每次循环处理的数组元素个数是否能提升性能呢。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250610204555399.png&#34; alt=&#34;image-20250610204555399&#34;&gt;&lt;/p&gt;
&lt;p&gt;这是汇编相应的实现过程，我们可以发现即使循环次数的减少但在执行过程中 mul 操作执行的次数并没有改变，所以提高单词的循环处理数组元素也不能达到我们的目的。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250610205030926.png&#34; alt=&#34;image-20250610205030926&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们新的程序中采用的了&lt;mark&gt; 2*2 两路并行展开&lt;/mark&gt;，将偶数下标存储在 acc0 中奇数存储在 acc1 中，最后再将两者相加。&lt;/p&gt;
&lt;p&gt;观察汇编我们发现&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250610205253070.png&#34; alt=&#34;image-20250610205253070&#34;&gt;&lt;/p&gt;
&lt;p&gt;寄存器使用了两个寄存器来并行，简化后的流程就是右侧的图，大大提升了效率。而不断增加并行的寄存器，CPE 会减小，但是我们要注意&lt;mark&gt;当超出寄存器的个数，导致将传入栈中时&lt;/mark&gt;，此时程序的执行效率可能会改变。&lt;/p&gt;
&lt;p&gt;另一种提升执行效率的方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;改变 acc 的合并顺序&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;combine5:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;acc = (acc OP data[i]) OP data[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;combine7:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;acc = acc OP (data[i] OP data[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250610210415771.png&#34; alt=&#34;image-20250610210415771&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们可以知道先合并的两个数据不需要等待之前迭代的部分，也就是主链路中只有 n/2 个 mul 这也是效率提升的原因&lt;/p&gt;
&lt;h2 id=&#34;存储器层次结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#存储器层次结构&#34;&gt;#&lt;/a&gt; 存储器层次结构&lt;/h2&gt;
&lt;h3 id=&#34;存储技术&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#存储技术&#34;&gt;#&lt;/a&gt; 存储技术&lt;/h3&gt;
&lt;p&gt;Cache 是 SRAM, 造价更贵，但更稳定&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250614222419476.png&#34; alt=&#34;image-20250614222419476&#34;&gt;&lt;/p&gt;
&lt;p&gt;Controller 输入 2 指令在 chip 中取第二行的数据到缓冲区中&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250614222632437.png&#34; alt=&#34;image-20250614222632437&#34;&gt;&lt;/p&gt;
&lt;p&gt;之后再输入 columns 为 1，从缓冲区中取 1 传输到 Memory&lt;/p&gt;
&lt;h3 id=&#34;缓存cache&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缓存cache&#34;&gt;#&lt;/a&gt; 缓存（Cache）&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Cache hit&lt;/strong&gt;：&lt;br&gt;
当从 K+1 层中找 d 这个数据时，我们先从第 k 层中寻找，如果 d 刚好在 k 层中，我们称这种情况为缓存命中，反之称为缓存不命中（Cache miss）&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;若发生缓存不命中的情况时，第 k 层中缓存从 K+1 层中取出目标数据块，如果 k 层已满那么会覆盖其中的块（替换策略有：随机替换和 LRU 等）&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cache 的内部结构&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250614225642835.png&#34; alt=&#34;image-20250614225642835&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cache 有 S 个 set，每个 set 中有 E 个 line，每个 line 中分为三部分分别是 Valid（判断数据是否有效），tag 标记（&lt;mark&gt;用来确定目标数据是否在当前的 Cache line 中&lt;/mark&gt;），之后的 B 位就是数据位了，所以一个 Cache 的空间可以用右边的公式来计算大小。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cache 的工作过程&lt;/strong&gt;：CPU 执行从内存地址 A 中读取数据时，将地址 A 发送到 Cache&lt;/p&gt;
&lt;h3 id=&#34;直接映射高速缓存&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#直接映射高速缓存&#34;&gt;#&lt;/a&gt; 直接映射高速缓存&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;组选择&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CPU 发送的地址中&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250615133636766.png&#34; alt=&#34;image-20250615133636766&#34;&gt;&lt;/p&gt;
&lt;p&gt;从组索引位决定 Set 的标号（&lt;mark&gt;关于组索引位为什么不选择高位而是选择地址的中间部分，我们随后做出解释&lt;/mark&gt;），接着我们取出相应的 Cache line&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;行匹配&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250615134036341.png&#34; alt=&#34;image-20250615134036341&#34;&gt;&lt;/p&gt;
&lt;p&gt;特定行 Cache hit 的条件有两个，一个是有效值是否为 1，另一个是 Tag 是否匹配如果匹配根据 Block offset 的字节偏移数来取出相应的数据（例如 100 指明偏移量为 4 则从 4 开始取剩下的字节）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;冲突不命中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于数组映射的 Cache 位置相同使某个 set 一直在变化导致效率低下的问题（详细看视频看懂这个问题即可）&lt;/p&gt;
&lt;p&gt;具体的解决措施就是改变数组的长度使映射的 set 不同来消除&lt;mark&gt;抖动&lt;/mark&gt;&lt;/p&gt;
&lt;h3 id=&#34;组相联和全相联cache&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组相联和全相联cache&#34;&gt;#&lt;/a&gt; 组相联和全相联 Cache&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/csapp/image-20250615140035770.png&#34; alt=&#34;image-20250615140035770&#34;&gt;&lt;/p&gt;
&lt;p&gt;还是需要三个阶段来取数据不同的使在行匹配中需要遍历每个 Set 找到 Tag 和有效值都符合要求的 line&lt;/p&gt;
&lt;p&gt;如果不命中则需要把内存中的一行写入这个 set 中，最好的替换位置是 valid 为 0 的空行，如果不满足则需要一些替换策略来替换已经写入的行中&lt;/p&gt;
&lt;p&gt;替换策略（随机替换，最不常用替换，最近使用最少策略）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全相联&lt;/strong&gt;&lt;br&gt;
整个 Cache 只有一个 set&lt;/p&gt;
</content>
        <updated>2025-08-02T11:39:29.698Z</updated>
    </entry>
    <entry>
        <id>https://ks-superbig.github.io/2025/07/03/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="https://ks-superbig.github.io/2025/07/03/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
</content>
        <updated>2025-07-03T04:05:19.071Z</updated>
    </entry>
</feed>
